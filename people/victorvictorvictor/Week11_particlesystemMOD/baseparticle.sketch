#pragma once

class baseparticle{
public:

    ofVec2f position;
    ofVec2f velocity;
    ofVec2f acceleration;
    
    float drag;
    float rebound;
    float radius;
    
    ofColor color;
    
	baseparticle(): position(ofGetWidth()/2, ofGetHeight()){
	    
	    velocity = ofVec2f(ofRandom(-10, 10), ofRandom(-10, 10));
        acceleration = ofVec2f(0, ofRandom(-0.001, -0.01));
        
        color = ofColor(ofRandom(255), ofRandom(100, 255), ofRandom(255), ofRandom(100, 200));
        
        rebound = ofRandom(0.9, 0.99);
        drag = ofRandom(0.99, 0.999);
	}

    virtual ~baseparticle(){
    }

    virtual void update() {
        velocity += acceleration;   
        velocity *= drag;
        position += velocity; 
        
        //X
      
        
        if ((position.x+radius) > ofGetWidth())
        {
            velocity.x*=-rebound;
            position.x = ofGetWidth() - radius;
        }
    
        if ((position.x-radius) < 0)
        {
            velocity.x*=-rebound;
            position.x = radius;
        }
        
        //Y
        
        if ((position.y+radius) > ofGetHeight())
        {
            velocity.y*=-rebound;
            position.y = ofGetHeight() - radius; 
        }
        
        if ((position.y-radius) < 0)
        {
            velocity.y*=-rebound;
            position.y = radius; 
        }
        
    }
    
    virtual void draw(){  
        ofFill();
        ofSetColor(color);
        ofCircle(position.x, position.y, ofRandom(5, 10));
        
        ofPushMatrix();
        ofTranslate(position.x, position.y);
        ofPopMatrix();
    }
    
};
    