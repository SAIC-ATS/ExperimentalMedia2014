class Image{
    
public:

    ofVec2f position;
    ofVec2f velocity;
    
    float angle;
    int radius;
    float rebound;
    float drag;
    float accelerationX;
    float accelerationY;
    ofImage myImage;
    
    
    Image() {
        
        myImage.loadImage("png.png");
        
        //angle = v1.angle(v2);
        
        
        radius = 24;
        
        // Choose a random position.
        position = ofVec2f((ofGetWidth() /2 - radius),
                           (ofGetHeight() /2) - radius);
        
        // Choose a random velocity.
        velocity = ofVec2f(ofRandom(-5, 5), ofRandom(-5, 5));
        
        //Choose a acceleration
        accelerationX = 0;
        accelerationY = 0.15;
        
        rebound = 0.9;
        drag = 0.99;
        
        angle = 0;
    
    }
    
    void update() {
        if (ofGetMousePressed()){
            //x = ofGetMouseX();
            //y = ofGetMouseY();
            velocity.x = ofRandom(-10, 10);
            velocity.y = ofRandom(-1, -15);
            return;
        }
        
        //add the acceleration component to velocity
        velocity.x = velocity.x + accelerationX;
        velocity.y = velocity.y + accelerationY;
    
        velocity.x = velocity.x * drag;//take away a little bit of velocity based on drag
        velocity.y = velocity.y * drag;//so that
    
        //add the velocity component to x and y position
        position.x = position.x + velocity.x;
        position.y = position.y + velocity.y;
    
        if ((position.x) < 0){ //left wall
            velocity.x = velocity.x * -rebound;
            position.x = radius; //set the ball in the right place.
        }
    
        if ((position.x) > ofGetWidth()){ //right wall
            velocity.x = velocity.x * -rebound;
            position.x = ofGetWidth() - radius;//set the ball in the right place.
        }
    
        if ((position.y - radius) < 0){ //bottum wall
            velocity.y = velocity.y * -rebound;
            position.y = radius;//set the ball in the right place.
        }
    
        if ((position.y + radius)> ofGetHeight()){ //top wall
            velocity.y = velocity.y * -rebound;
            position.y = ofGetHeight() - radius;//set the ball in the right place.
        }
    
    }

    void draw() {
        
        angle = angle + ofDegToRad(ofRandom(-180, 180));
        
        ofPushMatrix();
	    ofTranslate(position.x, position.y);
	    ofRotateZ(angle);
	
	    myImage.draw(-myImage.getWidth() / 2, - myImage.getHeight() / 2);
	    ofPopMatrix();
	
    }
};
