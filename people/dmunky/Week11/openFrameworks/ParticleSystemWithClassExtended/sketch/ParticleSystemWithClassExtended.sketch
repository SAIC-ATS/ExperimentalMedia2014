#include "BaseParticle.h"
#include "SnowParticle.h"
ofImage charlie;
std::vector<std::shared_ptr<BaseParticle> > particles;

void setup() {
    charlie.loadImage("charlie.jpg");
    ofSetWindowShape(640, 496);
    
    
    for (int i = 0; i < 100; i++)
    {
        std::shared_ptr<BaseParticle> pParticle(new BaseParticle());
        
        pParticle->position.x = ofRandomWidth();
        pParticle->position.y = ofRandomHeight();
        pParticle->velocity.x = ofRandom(-10, 10);
        pParticle->velocity.y = ofRandom(-10, 10);
        pParticle->drag = 0.05; //ofRandom(0.1, 0.99);

        particles.push_back(pParticle);
    }
    
     for (int i = 0; i < 100; i++)
    {
        std::shared_ptr<BaseParticle> pParticle(new SnowParticle());
        
        pParticle->position.x = ofRandomWidth();
        pParticle->position.y = ofRandomHeight();
        pParticle->velocity.x = ofRandom(-10, 10);
        pParticle->velocity.y = ofRandom(-10, 10);
        pParticle->drag = 0.1; //ofRandom(0.1, 0.99);

        particles.push_back(pParticle);
    
    }
}


void update() {
    for (int i = 0; i < particles.size(); i++)
    {
        particles[i]->update();
        
        particles[i]->acceleration.y = 02;
        
        if(particles[i]->position.x > ofGetWidth())
        {
            particles[i] -> velocity.x *= -1;
            particles[i] -> position.x = ofGetWidth();
         }
    
    else if (particles[i]->position.x <0)
    {   
        particles[i] -> velocity.x *=-1;
        particles[i] -> position.x = 0;
    }
    
     if (particles[i]->position.y > ofGetHeight())
    
    {
    particles[i] -> velocity.y *=-1;
    particles[i] -> position.y = ofGetHeight();
    }
    else if (particles[i]->position.y < 0)
    {
        particles[i]->velocity.y *= -1;
        particles[i]->position.y = 0;

    }
}
}


void draw() {
    charlie.draw(0,0);
    //ofBackground(0);
    for (int i = 0; i < particles.size(); i++)
    {
        particles[i]->draw();
    }
}
